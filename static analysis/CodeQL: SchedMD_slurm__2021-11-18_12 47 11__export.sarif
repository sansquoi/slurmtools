{"$schema":"https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json","version":"2.1.0","runs":[{"tool":{"driver":{"name":"LGTM.com","organization":"Semmle","version":"1.29.0-SNAPSHOT","rules":[]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/SchedMD/slurm.git","revisionId":"fc68380ccab7f791980db79325aa4af96127a40d"}],"results":[],"columnKind":"unicodeCodePoints","properties":{"semmle.formatSpecifier":"2.1.0","semmle.sourceLanguage":"python"}},{"tool":{"driver":{"name":"LGTM.com","organization":"Semmle","version":"1.29.0-SNAPSHOT","rules":[{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","name":"com.lgtm/cpp-queries:cpp/fixme-comment","shortDescription":{"text":"FIXME comment"},"fullDescription":{"text":"Comments containing 'FIXME' indicate that the code has known bugs."},"defaultConfiguration":{"enabled":true,"level":"note"},"properties":{"tags":["maintainability","documentation","external/cwe/cwe-546"],"kind":"problem","precision":"very-high","severity":"recommendation"}},{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","name":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","shortDescription":{"text":"Multiplication result converted to larger type"},"fullDescription":{"text":"A multiplication result that is converted to a larger type can be a sign that the result can overflow the type converted from."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["reliability","security","correctness","types","external/cwe/cwe-190","external/cwe/cwe-192","external/cwe/cwe-197","external/cwe/cwe-681"],"kind":"problem","precision":"high","security-severity":"8.1","severity":"warning"}},{"id":"com.lgtm/cpp-queries:cpp/useless-expression","name":"com.lgtm/cpp-queries:cpp/useless-expression","shortDescription":{"text":"Expression has no effect"},"fullDescription":{"text":"A pure expression whose value is ignored is likely to be the result of a typo."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["maintainability","correctness","external/cwe/cwe-561"],"kind":"problem","precision":"high","severity":"warning"}},{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","name":"com.lgtm/cpp-queries:cpp/toctou-race-condition","shortDescription":{"text":"Time-of-check time-of-use filesystem race condition"},"fullDescription":{"text":"Separately checking the state of a file before operating on it may allow an attacker to modify the file between the two operations."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["security","external/cwe/cwe-367"],"kind":"problem","precision":"high","security-severity":"7.7","severity":"warning"}},{"id":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","name":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","shortDescription":{"text":"Comparison of narrow type with wide type in loop condition"},"fullDescription":{"text":"Comparisons between types of different widths in a loop condition can cause the loop to behave unexpectedly."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["reliability","security","external/cwe/cwe-190","external/cwe/cwe-197","external/cwe/cwe-835"],"kind":"problem","precision":"high","security-severity":"7.8","severity":"warning"}},{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","name":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","shortDescription":{"text":"Ambiguously signed bit-field member"},"fullDescription":{"text":"Bit fields with integral types should have explicit signedness only. For example, use `unsigned int` rather than `int`. It is implementation specific whether an `int`-typed bit field is signed, so there could be unexpected sign extension or overflow."},"defaultConfiguration":{"enabled":true,"level":"warning"},"properties":{"tags":["reliability","readability","language-features","external/cwe/cwe-190"],"kind":"problem","precision":"high","severity":"warning"}}]}},"versionControlProvenance":[{"repositoryUri":"https://github.com/SchedMD/slurm.git","revisionId":"fc68380ccab7f791980db79325aa4af96127a40d"}],"artifacts":[{"location":{"uri":"src/api/job_report_functions.c","uriBaseId":"%SRCROOT%","index":0}},{"location":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1}},{"location":{"uri":"src/api/step_launch.c","uriBaseId":"%SRCROOT%","index":2}},{"location":{"uri":"src/bcast/file_bcast.c","uriBaseId":"%SRCROOT%","index":3}},{"location":{"uri":"src/common/assoc_mgr.c","uriBaseId":"%SRCROOT%","index":4}},{"location":{"uri":"src/common/callerid.c","uriBaseId":"%SRCROOT%","index":5}},{"location":{"uri":"src/common/cbuf.c","uriBaseId":"%SRCROOT%","index":6}},{"location":{"uri":"src/common/hostlist.c","uriBaseId":"%SRCROOT%","index":7}},{"location":{"uri":"src/common/node_conf.c","uriBaseId":"%SRCROOT%","index":8}},{"location":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9}},{"location":{"uri":"src/common/slurm_cred.c","uriBaseId":"%SRCROOT%","index":10}},{"location":{"uri":"src/common/slurm_cred.h","uriBaseId":"%SRCROOT%","index":11}},{"location":{"uri":"src/common/slurm_jobacct_gather.h","uriBaseId":"%SRCROOT%","index":12}},{"location":{"uri":"src/common/slurm_mpi.h","uriBaseId":"%SRCROOT%","index":13}},{"location":{"uri":"src/common/slurm_opt.c","uriBaseId":"%SRCROOT%","index":14}},{"location":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15}},{"location":{"uri":"src/common/stepd_api.h","uriBaseId":"%SRCROOT%","index":16}},{"location":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17}},{"location":{"uri":"src/common/tres_frequency.h","uriBaseId":"%SRCROOT%","index":18}},{"location":{"uri":"src/common/xhash.c","uriBaseId":"%SRCROOT%","index":19}},{"location":{"uri":"src/database/mysql_common.c","uriBaseId":"%SRCROOT%","index":20}},{"location":{"uri":"src/lua/slurm_lua.c","uriBaseId":"%SRCROOT%","index":21}},{"location":{"uri":"src/plugins/accounting_storage/mysql/as_mysql_job.c","uriBaseId":"%SRCROOT%","index":22}},{"location":{"uri":"src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi.c","uriBaseId":"%SRCROOT%","index":23}},{"location":{"uri":"src/plugins/acct_gather_energy/xcc/acct_gather_energy_xcc.c","uriBaseId":"%SRCROOT%","index":24}},{"location":{"uri":"src/plugins/acct_gather_profile/hdf5/hdf5_api.c","uriBaseId":"%SRCROOT%","index":25}},{"location":{"uri":"src/plugins/auth/munge/auth_munge.c","uriBaseId":"%SRCROOT%","index":26}},{"location":{"uri":"src/plugins/burst_buffer/common/burst_buffer_common.c","uriBaseId":"%SRCROOT%","index":27}},{"location":{"uri":"src/plugins/burst_buffer/datawarp/burst_buffer_datawarp.c","uriBaseId":"%SRCROOT%","index":28}},{"location":{"uri":"src/plugins/job_container/tmpfs/job_container_tmpfs.c","uriBaseId":"%SRCROOT%","index":29}},{"location":{"uri":"src/plugins/job_submit/lua/job_submit_lua.c","uriBaseId":"%SRCROOT%","index":30}},{"location":{"uri":"src/plugins/mpi/pmi2/setup.c","uriBaseId":"%SRCROOT%","index":31}},{"location":{"uri":"src/plugins/node_features/knl_cray/node_features_knl_cray.c","uriBaseId":"%SRCROOT%","index":32}},{"location":{"uri":"src/plugins/node_features/knl_generic/node_features_knl_generic.c","uriBaseId":"%SRCROOT%","index":33}},{"location":{"uri":"src/plugins/openapi/v0.0.36/nodes.c","uriBaseId":"%SRCROOT%","index":34}},{"location":{"uri":"src/plugins/priority/multifactor/priority_multifactor.c","uriBaseId":"%SRCROOT%","index":35}},{"location":{"uri":"src/plugins/proctrack/pgid/proctrack_pgid.c","uriBaseId":"%SRCROOT%","index":36}},{"location":{"uri":"src/plugins/select/cons_common/cons_common.c","uriBaseId":"%SRCROOT%","index":37}},{"location":{"uri":"src/plugins/select/cons_common/dist_tasks.c","uriBaseId":"%SRCROOT%","index":38}},{"location":{"uri":"src/plugins/select/cons_common/job_test.c","uriBaseId":"%SRCROOT%","index":39}},{"location":{"uri":"src/plugins/select/cons_res/job_test.c","uriBaseId":"%SRCROOT%","index":40}},{"location":{"uri":"src/plugins/select/cons_tres/job_test.c","uriBaseId":"%SRCROOT%","index":41}},{"location":{"uri":"src/plugins/select/cons_tres/select_cons_tres.c","uriBaseId":"%SRCROOT%","index":42}},{"location":{"uri":"src/plugins/select/cray_aries/select_cray_aries.c","uriBaseId":"%SRCROOT%","index":43}},{"location":{"uri":"src/plugins/switch/cray_aries/pe_info.c","uriBaseId":"%SRCROOT%","index":44}},{"location":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45}},{"location":{"uri":"src/plugins/task/affinity/numa.c","uriBaseId":"%SRCROOT%","index":46}},{"location":{"uri":"src/sacctmgr/resource_functions.c","uriBaseId":"%SRCROOT%","index":47}},{"location":{"uri":"src/salloc/salloc.c","uriBaseId":"%SRCROOT%","index":48}},{"location":{"uri":"src/sattach/sattach.c","uriBaseId":"%SRCROOT%","index":49}},{"location":{"uri":"src/slurmctld/backup.c","uriBaseId":"%SRCROOT%","index":50}},{"location":{"uri":"src/slurmctld/controller.c","uriBaseId":"%SRCROOT%","index":51}},{"location":{"uri":"src/slurmctld/gres_ctld.c","uriBaseId":"%SRCROOT%","index":52}},{"location":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53}},{"location":{"uri":"src/slurmctld/job_scheduler.c","uriBaseId":"%SRCROOT%","index":54}},{"location":{"uri":"src/slurmctld/locks.c","uriBaseId":"%SRCROOT%","index":55}},{"location":{"uri":"src/slurmctld/reservation.c","uriBaseId":"%SRCROOT%","index":56}},{"location":{"uri":"src/slurmctld/step_mgr.c","uriBaseId":"%SRCROOT%","index":57}},{"location":{"uri":"src/slurmd/slurmstepd/io.c","uriBaseId":"%SRCROOT%","index":58}},{"location":{"uri":"src/slurmd/slurmstepd/multi_prog.c","uriBaseId":"%SRCROOT%","index":59}},{"location":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60}},{"location":{"uri":"src/slurmd/slurmstepd/task.c","uriBaseId":"%SRCROOT%","index":61}},{"location":{"uri":"src/slurmrestd/http.c","uriBaseId":"%SRCROOT%","index":62}},{"location":{"uri":"src/srun/libsrun/allocate.c","uriBaseId":"%SRCROOT%","index":63}},{"location":{"uri":"src/sview/node_info.c","uriBaseId":"%SRCROOT%","index":64}},{"location":{"uri":"src/api/job_info.c","uriBaseId":"%SRCROOT%","index":65}},{"location":{"uri":"src/plugins/select/linear/select_linear.c","uriBaseId":"%SRCROOT%","index":66}},{"location":{"uri":"src/plugins/acct_gather_profile/hdf5/acct_gather_profile_hdf5.c","uriBaseId":"%SRCROOT%","index":67}},{"location":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68}},{"location":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69}},{"location":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70}},{"location":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71}},{"location":{"uri":"src/common/plugstack.c","uriBaseId":"%SRCROOT%","index":72}},{"location":{"uri":"src/slurmd/slurmd/slurmd.h","uriBaseId":"%SRCROOT%","index":73}}],"results":[{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This only works for CPUS now"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/job_report_functions.c","uriBaseId":"%SRCROOT%","index":0},"region":{"startLine":138,"endColumn":42}}}],"partialFingerprints":{"primaryLocationLineHash":"fa5ab84d04a46585:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Add destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":234,"startColumn":39,"endColumn":66}}}],"partialFingerprints":{"primaryLocationLineHash":"aeb59b6cd078e009:1","primaryLocationStartColumnFingerprint":"37"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - perhaps we should free the message here?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":506,"startColumn":4,"endColumn":58}}}],"partialFingerprints":{"primaryLocationLineHash":"6c6c4fc37614a449:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Add destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":542,"startColumn":39,"endColumn":66}}}],"partialFingerprints":{"primaryLocationLineHash":"aeb59b6cd078e009:2","primaryLocationStartColumnFingerprint":"37"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: !  Need to set ltaskid based on gtaskid"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":646,"startColumn":2,"endColumn":52}}}],"partialFingerprints":{"primaryLocationLineHash":"eced19d628cc0819:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - perhaps should make certain that IO engine is shutdown \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_io.c","uriBaseId":"%SRCROOT%","index":1},"region":{"startLine":1213,"startColumn":2,"endLine":1214,"endColumn":71}}}],"partialFingerprints":{"primaryLocationLineHash":"9909e64a0d65cb9f:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - should this be a callback?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_launch.c","uriBaseId":"%SRCROOT%","index":2},"region":{"startLine":723,"startColumn":5,"endColumn":45}}}],"partialFingerprints":{"primaryLocationLineHash":"73443d46792781d9:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - eventually the slurmd should \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_launch.c","uriBaseId":"%SRCROOT%","index":2},"region":{"startLine":734,"startColumn":5,"endLine":740,"endColumn":8}}}],"partialFingerprints":{"primaryLocationLineHash":"7e6087840e0c2379:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/step_launch.c","uriBaseId":"%SRCROOT%","index":2},"region":{"startLine":1891,"startColumn":3,"endLine":1897,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"f3806ac69566f9ad:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: does not handle spaces in library paths correctly. \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/bcast/file_bcast.c","uriBaseId":"%SRCROOT%","index":3},"region":{"startLine":465,"startColumn":2,"endLine":468,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"27d389f8727aac4f:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: __thread is non-standard, and may cause build failures on unusual \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/assoc_mgr.c","uriBaseId":"%SRCROOT%","index":4},"region":{"startLine":2115,"endLine":2119,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"a657cc12ad8d755e:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: In in6.h, s6_addr32 def is guarded by #ifdef _KERNEL \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/callerid.c","uriBaseId":"%SRCROOT%","index":5},"region":{"startLine":46,"endLine":50,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"e9a9e21a7cc2a94a:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Shrink buffer back to minimum size."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/cbuf.c","uriBaseId":"%SRCROOT%","index":6},"region":{"startLine":203,"startColumn":5,"endLine":205,"endColumn":8}}}],"partialFingerprints":{"primaryLocationLineHash":"976c431cb2495aff:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: NOT IMPLEMENTED."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/cbuf.c","uriBaseId":"%SRCROOT%","index":6},"region":{"startLine":1598,"startColumn":5,"endLine":1599,"endColumn":8}}}],"partialFingerprints":{"primaryLocationLineHash":"80e4d97098d84108:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: THIS WILL NOT ALWAYS WORK CORRECTLY IF CALLED FROM A \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/hostlist.c","uriBaseId":"%SRCROOT%","index":7},"region":{"startLine":3578,"startColumn":3,"endLine":3582,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"1bfb2d139dd283d5:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This function ignores tasks-per-socket and tasks-per-node checks."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/node_conf.c","uriBaseId":"%SRCROOT%","index":8},"region":{"startLine":1091,"endColumn":75}}}],"partialFingerprints":{"primaryLocationLineHash":"a3751c18a8f9a2b7:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Destroy \"values\" ?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1415,"startColumn":6,"endColumn":33}}}],"partialFingerprints":{"primaryLocationLineHash":"d0820cee2ea059ba:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this function should always return either an empty list, or \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1459,"startColumn":2,"endLine":1464,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"d1a028f8c78b7d36:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: 2 versions after 21.08 you can remove job_mem_limit and step_mem_limit"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_cred.c","uriBaseId":"%SRCROOT%","index":10},"region":{"startLine":159,"endLine":163,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"d59b2056affd9bf:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: 2 versions after 21.08 you can remove job_mem_limit and step_mem_limit"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_cred.h","uriBaseId":"%SRCROOT%","index":11},"region":{"startLine":131,"endLine":140,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"5f60714127402452:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: these need to be arrays like above"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_jobacct_gather.h","uriBaseId":"%SRCROOT%","index":12},"region":{"startLine":114,"startColumn":2,"endColumn":49}}}],"partialFingerprints":{"primaryLocationLineHash":"8f47fb4f8e59ea51:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: hopefully this will not exist and we can use \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_jobacct_gather.h","uriBaseId":"%SRCROOT%","index":12},"region":{"startLine":127,"endLine":131,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"d98d6633b606b8b2:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - Nobody calls the following function.  Perhaps someone should. \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_mpi.h","uriBaseId":"%SRCROOT%","index":13},"region":{"startLine":143,"endLine":145,"endColumn":73}}}],"partialFingerprints":{"primaryLocationLineHash":"15316b95850ff058:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ignore SLURM_DIST_PLANESIZE envvar for slurmrestd"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_opt.c","uriBaseId":"%SRCROOT%","index":14},"region":{"startLine":1494,"startColumn":3,"endColumn":65}}}],"partialFingerprints":{"primaryLocationLineHash":"31757516429eda9c:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: the srun command silently stomps on any --mem-per-cpu \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_opt.c","uriBaseId":"%SRCROOT%","index":14},"region":{"startLine":2641,"startColumn":2,"endLine":2644,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"de3953a6ac6e8252:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: --nodefile and --nodelist options should be mutually exclusive. \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/slurm_opt.c","uriBaseId":"%SRCROOT%","index":14},"region":{"startLine":3037,"endLine":3040,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"84302d942d04b726:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: BUG: On Linux, uid_t is uint32_t but this can return -1."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":1211,"endLine":1216,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"71ad895b197c3b79:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - The pid/gtid info returned in the \"resp\" parameter should \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.h","uriBaseId":"%SRCROOT%","index":16},"region":{"startLine":169,"endLine":178,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"62f4600ff8e8bd4d:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: BUG: On Linux, uid_t is uint32_t but this can return -1."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.h","uriBaseId":"%SRCROOT%","index":16},"region":{"startLine":304,"endLine":309,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"71ad895b197c3b79:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":50,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"135f243a9c9bb9b4:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":58,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"76cd1734e3b79214:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":66,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"f96d2f401e451387:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":74,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"92a16a00dbdef665:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":82,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"7d847f5417012479:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":91,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"76c1469d6a1e8eb4:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":101,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"3632fc9a62aa5e1c:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":112,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"2f58fc4b8b5f5511:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":226,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"90fe115e04cabdc3:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":235,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"8f99de963f2e3cf1:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - To do"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.c","uriBaseId":"%SRCROOT%","index":17},"region":{"startLine":243,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"375f4933c1df72a:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Not applicable"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/tres_frequency.h","uriBaseId":"%SRCROOT%","index":18},"region":{"startLine":83,"endColumn":24}}}],"partialFingerprints":{"primaryLocationLineHash":"df3790dad723e7a4:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/xhash.c","uriBaseId":"%SRCROOT%","index":19},"region":{"startLine":51,"endLine":58,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"6e0ee4445207c5a9:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: If we get ER_LOCK_WAIT_TIMEOUT here we need \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/database/mysql_common.c","uriBaseId":"%SRCROOT%","index":20},"region":{"startLine":176,"startColumn":4,"endLine":182,"endColumn":7}}}],"partialFingerprints":{"primaryLocationLineHash":"b3ab73f084bfc6e4:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Remove this in the future, lua can't handle 64bit \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/lua/slurm_lua.c","uriBaseId":"%SRCROOT%","index":21},"region":{"startLine":479,"startColumn":3,"endLine":482,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"e09d7f63bc940d34:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Verify this is still needed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/accounting_storage/mysql/as_mysql_job.c","uriBaseId":"%SRCROOT%","index":22},"region":{"startLine":749,"startColumn":3,"endColumn":44}}}],"partialFingerprints":{"primaryLocationLineHash":"d0daa01de508f665:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This is not included until later versions of IPMI, so don't \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi.c","uriBaseId":"%SRCROOT%","index":23},"region":{"startLine":281,"startColumn":2,"endLine":283,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"9d661b9233f1d9fb:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: remove these from the structure?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_energy/ipmi/acct_gather_energy_ipmi.c","uriBaseId":"%SRCROOT%","index":23},"region":{"startLine":1173,"endColumn":46}}}],"partialFingerprints":{"primaryLocationLineHash":"770e5f10e71e45a5:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Investigate which is the OVERFLOW limit for XCC"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_energy/xcc/acct_gather_energy_xcc.c","uriBaseId":"%SRCROOT%","index":24},"region":{"startLine":81,"endColumn":59}}}],"partialFingerprints":{"primaryLocationLineHash":"ca6d7875eb92a5e0:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: We need to make it so we can use deprecated symbols."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_profile/hdf5/hdf5_api.c","uriBaseId":"%SRCROOT%","index":25},"region":{"startLine":49,"endColumn":63}}}],"partialFingerprints":{"primaryLocationLineHash":"a999f0a30fe93825:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this will need updates when MUNGE supports IPv6 addresses."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/auth/munge/auth_munge.c","uriBaseId":"%SRCROOT%","index":26},"region":{"startLine":319,"startColumn":2,"endColumn":73}}}],"partialFingerprints":{"primaryLocationLineHash":"1bc0b9e1985c505e:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: should grp_used_tres_run_secs be \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/common/burst_buffer_common.c","uriBaseId":"%SRCROOT%","index":27},"region":{"startLine":1568,"startColumn":4,"endLine":1570,"endColumn":7}}}],"partialFingerprints":{"primaryLocationLineHash":"70edac65069a8b49:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: should grp_used_tres_run_secs be \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/common/burst_buffer_common.c","uriBaseId":"%SRCROOT%","index":27},"region":{"startLine":1657,"startColumn":4,"endLine":1658,"endColumn":44}}}],"partialFingerprints":{"primaryLocationLineHash":"f167e5b8b72211c0:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Cray API returning \"job_file_valid True\" but exit 1 in some cases"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/datawarp/burst_buffer_datawarp.c","uriBaseId":"%SRCROOT%","index":28},"region":{"startLine":3539,"startColumn":3,"endColumn":77}}}],"partialFingerprints":{"primaryLocationLineHash":"9e14068ee9123be6:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Cray bug: API returning error if no configurations, use above code when fixed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/datawarp/burst_buffer_datawarp.c","uriBaseId":"%SRCROOT%","index":28},"region":{"startLine":4527,"endColumn":87}}}],"partialFingerprints":{"primaryLocationLineHash":"d9b6a61b69cd6127:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Cray bug: API returning error if no instances, use above code when fixed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/datawarp/burst_buffer_datawarp.c","uriBaseId":"%SRCROOT%","index":28},"region":{"startLine":4596,"endColumn":82}}}],"partialFingerprints":{"primaryLocationLineHash":"ead8c19584bce755:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Cray bug: API returning error if no sessions, use above code when fixed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/burst_buffer/datawarp/burst_buffer_datawarp.c","uriBaseId":"%SRCROOT%","index":28},"region":{"startLine":4731,"endColumn":81}}}],"partialFingerprints":{"primaryLocationLineHash":"7d8a341cddfe7dc8:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: only used for SLURM_20_11_PROTOCOL_VERSION \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/job_container/tmpfs/job_container_tmpfs.c","uriBaseId":"%SRCROOT%","index":29},"region":{"startLine":760,"startColumn":2,"endLine":764,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"39b0f97eda9a9ead:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Remove this in the future, lua can't handle 64bit \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/job_submit/lua/job_submit_lua.c","uriBaseId":"%SRCROOT%","index":30},"region":{"startLine":597,"startColumn":3,"endLine":600,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"e09d7f63bc940d37:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Remove this in the future, lua can't handle 64bit \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/job_submit/lua/job_submit_lua.c","uriBaseId":"%SRCROOT%","index":30},"region":{"startLine":880,"startColumn":3,"endLine":883,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"e09d7f63bc940d35:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: We need to handle %n and %h in the spool dir, but don't have \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/mpi/pmi2/setup.c","uriBaseId":"%SRCROOT%","index":31},"region":{"startLine":684,"startColumn":2,"endLine":687,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"d936012c71d73cf5:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: To be added \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/node_features/knl_cray/node_features_knl_cray.c","uriBaseId":"%SRCROOT%","index":32},"region":{"startLine":2128,"endLine":2149,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"941cea6b86e8a9cd:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Need better mechanism to get MCDRAM percentages"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/node_features/knl_generic/node_features_knl_generic.c","uriBaseId":"%SRCROOT%","index":33},"region":{"startLine":829,"endColumn":57}}}],"partialFingerprints":{"primaryLocationLineHash":"2d159dab458d7962:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Additional logic is needed to determine the available MCDRAM space"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/node_features/knl_generic/node_features_knl_generic.c","uriBaseId":"%SRCROOT%","index":33},"region":{"startLine":1665,"endColumn":76}}}],"partialFingerprints":{"primaryLocationLineHash":"b2c78b7dde55efe9:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Additional logic will also be required to handle heterogeneous sizes"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/node_features/knl_generic/node_features_knl_generic.c","uriBaseId":"%SRCROOT%","index":33},"region":{"startLine":1666,"endColumn":78}}}],"partialFingerprints":{"primaryLocationLineHash":"26b5adf3e8c64974:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: data_set_string(data_key_set(d, \"partitions\"), node->partitions);"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/openapi/v0.0.36/nodes.c","uriBaseId":"%SRCROOT%","index":34},"region":{"startLine":134,"startColumn":2,"endColumn":77}}}],"partialFingerprints":{"primaryLocationLineHash":"5511f5434f707993:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This could be a tunable parameter \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/priority/multifactor/priority_multifactor.c","uriBaseId":"%SRCROOT%","index":35},"region":{"startLine":1611,"startColumn":11,"endLine":1613,"endColumn":24}}}],"partialFingerprints":{"primaryLocationLineHash":"2e1db3ae4e98b466:1","primaryLocationStartColumnFingerprint":"9"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this should work off the product of TRESBillingWeights"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/priority/multifactor/priority_multifactor.c","uriBaseId":"%SRCROOT%","index":35},"region":{"startLine":2081,"startColumn":2,"endColumn":69}}}],"partialFingerprints":{"primaryLocationLineHash":"a827fb06f90f55df:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Do we need to filter zombies like the Linux code?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/proctrack/pgid/proctrack_pgid.c","uriBaseId":"%SRCROOT%","index":36},"region":{"startLine":225,"startColumn":3,"endColumn":62}}}],"partialFingerprints":{"primaryLocationLineHash":"1609af3f89ad38ac:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: core_bitmap is a full-system core bitmap to be \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/cons_common.c","uriBaseId":"%SRCROOT%","index":37},"region":{"startLine":2200,"startColumn":2,"endLine":2204,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"801c2a669a840dcf:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: spec_core_filter for cons_res is really checking if \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/cons_common.c","uriBaseId":"%SRCROOT%","index":37},"region":{"startLine":2217,"startColumn":3,"endLine":2221,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"6690d8c26bde9eb7:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: verify this isn't needed for cons_res"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/dist_tasks.c","uriBaseId":"%SRCROOT%","index":38},"region":{"startLine":1071,"startColumn":4,"endColumn":54}}}],"partialFingerprints":{"primaryLocationLineHash":"dee858431dd13bdf:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: do we need min_core/min_socket checks here?"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/dist_tasks.c","uriBaseId":"%SRCROOT%","index":38},"region":{"startLine":1117,"startColumn":3,"endLine":1120,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"20a80f639d7dd02b:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This was removed in cons_tres commit e82b9f17a23adf0, I am \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/job_test.c","uriBaseId":"%SRCROOT%","index":39},"region":{"startLine":279,"startColumn":2,"endLine":282,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"b744d1b3617e9c46:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This is a hack to make cons_res more bullet proof as \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/job_test.c","uriBaseId":"%SRCROOT%","index":39},"region":{"startLine":352,"startColumn":3,"endLine":356,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"aeb563486e2ed81e:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Need to recheck min_cores, etc. here"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_res/job_test.c","uriBaseId":"%SRCROOT%","index":40},"region":{"startLine":2190,"startColumn":4,"endColumn":53}}}],"partialFingerprints":{"primaryLocationLineHash":"ddc73405af15ea68:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Need to recheck min_cores, etc. here"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_tres/job_test.c","uriBaseId":"%SRCROOT%","index":41},"region":{"startLine":3488,"startColumn":4,"endColumn":53}}}],"partialFingerprints":{"primaryLocationLineHash":"ddc73405af15ea68:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: exc_core_bitmap is a full-system core bitmap to be replaced \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_tres/select_cons_tres.c","uriBaseId":"%SRCROOT%","index":42},"region":{"startLine":482,"startColumn":2,"endLine":485,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"2a7f7ef3e842a100:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: in the future copy the header here (if needed)"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cray_aries/select_cray_aries.c","uriBaseId":"%SRCROOT%","index":43},"region":{"startLine":2105,"startColumn":3,"endColumn":62}}}],"partialFingerprints":{"primaryLocationLineHash":"25d3f3ca2725d7eb:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this is not configured for hetjob yet"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/switch/cray_aries/pe_info.c","uriBaseId":"%SRCROOT%","index":44},"region":{"startLine":295,"startColumn":2,"endColumn":52}}}],"partialFingerprints":{"primaryLocationLineHash":"b6f3ac9c62794276:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: I'm worried about core_bitmap with CPU_BIND_TO_SOCKETS & \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":548,"startColumn":2,"endLine":552,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"19bf3b6bc2ff3080:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This is a hack to make it work like NUMA v2, but for \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/numa.c","uriBaseId":"%SRCROOT%","index":46},"region":{"startLine":327,"startColumn":3,"endLine":331,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"18b5747512432eae:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: make sure we don't \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/sacctmgr/resource_functions.c","uriBaseId":"%SRCROOT%","index":47},"region":{"startLine":677,"startColumn":6,"endLine":678,"endColumn":22}}}],"partialFingerprints":{"primaryLocationLineHash":"7b0680087d412e57:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: How much lead time do we want for this message? Some jobs may \\[...\\]\nFIXME comment: We may want to signal the job or perform other action for this. \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/salloc/salloc.c","uriBaseId":"%SRCROOT%","index":48},"region":{"startLine":1009,"endLine":1016,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"c39c941b71267421:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this does not work with hetsteps"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/sattach/sattach.c","uriBaseId":"%SRCROOT%","index":49},"region":{"startLine":149,"startColumn":2,"endColumn":47}}}],"partialFingerprints":{"primaryLocationLineHash":"d38b417da4804fe2:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - node_name is not necessarily \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/sattach/sattach.c","uriBaseId":"%SRCROOT%","index":49},"region":{"startLine":344,"startColumn":4,"endLine":345,"endColumn":26}}}],"partialFingerprints":{"primaryLocationLineHash":"312acf8b7045c67f:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - does nothing yet"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/sattach/sattach.c","uriBaseId":"%SRCROOT%","index":49},"region":{"startLine":603,"startColumn":3,"endColumn":33}}}],"partialFingerprints":{"primaryLocationLineHash":"7e9c8fefc8d944a5:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Ideally the REQUEST_CONTROL RPC does not return until all \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/backup.c","uriBaseId":"%SRCROOT%","index":50},"region":{"startLine":700,"startColumn":2,"endLine":706,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"ab27abe2de9c3a1:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: We should do things differently here depending on the return \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/controller.c","uriBaseId":"%SRCROOT%","index":51},"region":{"startLine":1365,"startColumn":2,"endLine":1371,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"dcaf67d3f08c2e22:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: set up the other tres here that aren't specific"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/controller.c","uriBaseId":"%SRCROOT%","index":51},"region":{"startLine":2487,"startColumn":3,"endColumn":63}}}],"partialFingerprints":{"primaryLocationLineHash":"11adede260909346:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: cluster_cpus probably needs to be removed and handled \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/controller.c","uriBaseId":"%SRCROOT%","index":51},"region":{"startLine":2533,"startColumn":2,"endLine":2535,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"18a0ad0b4454fd04:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Currently the only option that sets mem_per_gres is \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/gres_ctld.c","uriBaseId":"%SRCROOT%","index":52},"region":{"startLine":2038,"startColumn":3,"endLine":2047,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"5c9c4ac6a01c53f4:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Ideally we only want to refuse the request if the \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":5091,"startColumn":2,"endLine":5098,"endColumn":5}}}],"partialFingerprints":{"primaryLocationLineHash":"12a8a16e592275cf:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":6829,"startColumn":3,"endColumn":14}}}],"partialFingerprints":{"primaryLocationLineHash":"a1f634e03b81e5:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: this assumes that all nodes have equal TRES"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":9094,"startColumn":2,"endColumn":58}}}],"partialFingerprints":{"primaryLocationLineHash":"294e0801841213c3:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: do we really need to update accounting here?  It \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":11845,"startColumn":2,"endLine":11846,"endColumn":28}}}],"partialFingerprints":{"primaryLocationLineHash":"88c27e02ca52016d:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Also test for ESLURM_INTERCONNECT_BUSY"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":16664,"endColumn":52}}}],"partialFingerprints":{"primaryLocationLineHash":"845624689c74f1d1:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This is a kludge, but this event indicates a serious \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_scheduler.c","uriBaseId":"%SRCROOT%","index":54},"region":{"startLine":2196,"startColumn":3,"endLine":2199,"endColumn":49}}}],"partialFingerprints":{"primaryLocationLineHash":"f66a737bbc83af2a:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: __thread is non-standard, and may cause build failures on unusual \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/locks.c","uriBaseId":"%SRCROOT%","index":55},"region":{"startLine":64,"endLine":68,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"a657cc12ad8d755e:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Support more core based reservation updates"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/reservation.c","uriBaseId":"%SRCROOT%","index":56},"region":{"startLine":2766,"startColumn":2,"endColumn":58}}}],"partialFingerprints":{"primaryLocationLineHash":"c2885328c2c7bb18:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Ideally we figure out how many jobs are actually \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/reservation.c","uriBaseId":"%SRCROOT%","index":56},"region":{"startLine":5533,"startColumn":3,"endLine":5535,"endColumn":15}}}],"partialFingerprints":{"primaryLocationLineHash":"e5eaeb88926ded8f:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: reboot and sending it to this function needs to be removed"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/reservation.c","uriBaseId":"%SRCROOT%","index":56},"region":{"startLine":5539,"startColumn":2,"endColumn":73}}}],"partialFingerprints":{"primaryLocationLineHash":"c89d3e4afa456887:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: This only tracks when ANY licenses required \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/reservation.c","uriBaseId":"%SRCROOT%","index":56},"region":{"startLine":6228,"startColumn":4,"endLine":6232,"endColumn":7}}}],"partialFingerprints":{"primaryLocationLineHash":"9c227193e0edfdc:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: If job step record is preserved after completion, \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/step_mgr.c","uriBaseId":"%SRCROOT%","index":57},"region":{"startLine":427,"endLine":431,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"e1bb7fd782c81b51:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Add support for AND, OR, etc. here if desired"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/step_mgr.c","uriBaseId":"%SRCROOT%","index":57},"region":{"startLine":1065,"startColumn":3,"endLine":1069,"endColumn":6}}}],"partialFingerprints":{"primaryLocationLineHash":"cb9a4ad40db8563e:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: on a heterogeneous system running the \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/step_mgr.c","uriBaseId":"%SRCROOT%","index":57},"region":{"startLine":3292,"startColumn":4,"endLine":3301,"endColumn":7}}}],"partialFingerprints":{"primaryLocationLineHash":"4be2aaca65a08aa6:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Add destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/io.c","uriBaseId":"%SRCROOT%","index":58},"region":{"startLine":594,"startColumn":36,"endColumn":63}}}],"partialFingerprints":{"primaryLocationLineHash":"e4c7bdffd9628d31:1","primaryLocationStartColumnFingerprint":"34"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - following call MIGHT lead to too much recursion"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/io.c","uriBaseId":"%SRCROOT%","index":58},"region":{"startLine":1200,"startColumn":3,"endColumn":64}}}],"partialFingerprints":{"primaryLocationLineHash":"73bf4684412a2624:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/io.c","uriBaseId":"%SRCROOT%","index":58},"region":{"startLine":1505,"startColumn":41,"endColumn":65}}}],"partialFingerprints":{"primaryLocationLineHash":"202cac78278385e0:1","primaryLocationStartColumnFingerprint":"39"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/io.c","uriBaseId":"%SRCROOT%","index":58},"region":{"startLine":1573,"startColumn":41,"endColumn":65}}}],"partialFingerprints":{"primaryLocationLineHash":"202cac78278385e0:2","primaryLocationStartColumnFingerprint":"39"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: - It would be nice to parse the multi-prog array just once \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/multi_prog.c","uriBaseId":"%SRCROOT%","index":59},"region":{"startLine":121,"endLine":125,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"1eb41d95783a8713:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":409,"startColumn":36,"endColumn":65}}}],"partialFingerprints":{"primaryLocationLineHash":"b78d6dbefd6d3434:1","primaryLocationStartColumnFingerprint":"34"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":410,"startColumn":44,"endColumn":73}}}],"partialFingerprints":{"primaryLocationLineHash":"a40fbbe2a848d42b:1","primaryLocationStartColumnFingerprint":"42"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":411,"startColumn":44,"endColumn":73}}}],"partialFingerprints":{"primaryLocationLineHash":"703675ddf6c3bbd4:1","primaryLocationStartColumnFingerprint":"42"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":412,"startColumn":42,"endColumn":71}}}],"partialFingerprints":{"primaryLocationLineHash":"b12501222808d904:1","primaryLocationStartColumnFingerprint":"40"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":414,"startColumn":42,"endColumn":71}}}],"partialFingerprints":{"primaryLocationLineHash":"233262948608ea37:1","primaryLocationStartColumnFingerprint":"40"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: ! Needs destructor"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/slurmstepd_job.c","uriBaseId":"%SRCROOT%","index":60},"region":{"startLine":416,"startColumn":43,"endColumn":72}}}],"partialFingerprints":{"primaryLocationLineHash":"1783f3c5d78ec275:1","primaryLocationStartColumnFingerprint":"41"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Come up with a real solution for EUID instead of substituting RUID"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/task.c","uriBaseId":"%SRCROOT%","index":61},"region":{"startLine":61,"endColumn":80}}}],"partialFingerprints":{"primaryLocationLineHash":"8ccf3ba5a0baf8fc:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: figure out correct bounds!"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmrestd/http.c","uriBaseId":"%SRCROOT%","index":62},"region":{"startLine":260,"startColumn":3,"endColumn":38}}}],"partialFingerprints":{"primaryLocationLineHash":"ca914112131d797a:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: How much lead time do we want for this message? Some jobs may \\[...\\]\nFIXME comment: We may want to signal the job or perform other action for this. \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/srun/libsrun/allocate.c","uriBaseId":"%SRCROOT%","index":63},"region":{"startLine":152,"endLine":159,"endColumn":4}}}],"partialFingerprints":{"primaryLocationLineHash":"c39c941b71267421:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/fixme-comment","ruleIndex":0,"rule":{"id":"com.lgtm/cpp-queries:cpp/fixme-comment","index":0},"message":{"text":"FIXME comment: Add an \"in use\" flag, copy the data, or otherwise \\[...\\]"},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/sview/node_info.c","uriBaseId":"%SRCROOT%","index":64},"region":{"startLine":970,"startColumn":3,"endLine":971,"endColumn":59}}}],"partialFingerprints":{"primaryLocationLineHash":"6808e7a1b7bef9e1:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'unsigned int' before it is converted to 'bitoff_t'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/job_info.c","uriBaseId":"%SRCROOT%","index":65},"region":{"startLine":781,"startColumn":27,"endColumn":45}}}],"partialFingerprints":{"primaryLocationLineHash":"f3446ba6721a39c2:1","primaryLocationStartColumnFingerprint":"23"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'unsigned int' before it is converted to 'bitoff_t'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/api/job_info.c","uriBaseId":"%SRCROOT%","index":65},"region":{"startLine":1845,"startColumn":25,"endColumn":43}}}],"partialFingerprints":{"primaryLocationLineHash":"47b30d3e9a755cf1:1","primaryLocationStartColumnFingerprint":"23"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'int' before it is converted to 'size_t'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/cons_common/dist_tasks.c","uriBaseId":"%SRCROOT%","index":38},"region":{"startLine":672,"startColumn":25,"endColumn":45}}}],"partialFingerprints":{"primaryLocationLineHash":"781f1cfedaaa6997:1","primaryLocationStartColumnFingerprint":"22"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'int' before it is converted to 'long'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/linear/select_linear.c","uriBaseId":"%SRCROOT%","index":66},"region":{"startLine":1165,"startColumn":23,"endColumn":58}}}],"partialFingerprints":{"primaryLocationLineHash":"80b7ee78208de4b:1","primaryLocationStartColumnFingerprint":"20"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'int' before it is converted to 'long'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/linear/select_linear.c","uriBaseId":"%SRCROOT%","index":66},"region":{"startLine":1166,"startColumn":21,"endColumn":43}}}],"partialFingerprints":{"primaryLocationLineHash":"b81be42a56b97bc6:1","primaryLocationStartColumnFingerprint":"18"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'int' before it is converted to 'long'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/select/linear/select_linear.c","uriBaseId":"%SRCROOT%","index":66},"region":{"startLine":1526,"startColumn":32,"endLine":1527,"endColumn":16}}}],"partialFingerprints":{"primaryLocationLineHash":"e79f3f4eb590102b:1","primaryLocationStartColumnFingerprint":"25"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'unsigned int' before it is converted to 'uint64_t'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":12673,"startColumn":4,"endLine":12676,"endColumn":44}}}],"partialFingerprints":{"primaryLocationLineHash":"6f27b0c404e974e0:1","primaryLocationStartColumnFingerprint":"0"}},{"ruleId":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","ruleIndex":1,"rule":{"id":"com.lgtm/cpp-queries:cpp/integer-multiplication-cast-to-long","index":1},"message":{"text":"Multiplication result may overflow 'unsigned int' before it is converted to 'unsigned long'."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_scheduler.c","uriBaseId":"%SRCROOT%","index":54},"region":{"startLine":3943,"startColumn":22,"endColumn":46}}}],"partialFingerprints":{"primaryLocationLineHash":"5bb4f4b71bc9ca63:1","primaryLocationStartColumnFingerprint":"19"}},{"ruleId":"com.lgtm/cpp-queries:cpp/useless-expression","ruleIndex":2,"rule":{"id":"com.lgtm/cpp-queries:cpp/useless-expression","index":2},"message":{"text":"This expression has no effect (because [cbuf_shrink](1) has no external side effects)."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/cbuf.c","uriBaseId":"%SRCROOT%","index":6},"region":{"startLine":1309,"startColumn":9,"endColumn":20}}}],"partialFingerprints":{"primaryLocationLineHash":"f9ac626a1544b525:1","primaryLocationStartColumnFingerprint":"0"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/common/cbuf.c","uriBaseId":"%SRCROOT%","index":6},"region":{"startLine":1584,"startColumn":12,"endColumn":23}},"message":{"text":"cbuf_shrink"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](3), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1187,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"73609bc833414fe5:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1187,"startColumn":12,"endColumn":20}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1180,"startColumn":7,"endColumn":11}},"message":{"text":"checked"}},{"id":3,"physicalLocation":{"artifactLocation":{"uri":"src/common/parse_config.c","uriBaseId":"%SRCROOT%","index":9},"region":{"startLine":1183,"startColumn":6,"endColumn":14}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](3), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](4), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":116,"startColumn":7,"endColumn":13}}}],"partialFingerprints":{"primaryLocationLineHash":"97c7f42ab428520f:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":116,"startColumn":14,"endColumn":25}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":101,"startColumn":6,"endColumn":10}},"message":{"text":"checked"}},{"id":3,"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":107,"startColumn":26,"endColumn":29}},"message":{"text":"checked"}},{"id":4,"physicalLocation":{"artifactLocation":{"uri":"src/common/stepd_api.c","uriBaseId":"%SRCROOT%","index":15},"region":{"startLine":114,"startColumn":13,"endColumn":16}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_profile/hdf5/acct_gather_profile_hdf5.c","uriBaseId":"%SRCROOT%","index":67},"region":{"startLine":178,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"21d8813fa703363f:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_profile/hdf5/acct_gather_profile_hdf5.c","uriBaseId":"%SRCROOT%","index":67},"region":{"startLine":178,"startColumn":12,"endColumn":20}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/acct_gather_profile/hdf5/acct_gather_profile_hdf5.c","uriBaseId":"%SRCROOT%","index":67},"region":{"startLine":176,"startColumn":6,"endColumn":11}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1296,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"8643013666ace844:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1296,"startColumn":12,"endColumn":21}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1282,"startColumn":22,"endColumn":27}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1298,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"8dd4518eb60661f7:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1298,"startColumn":12,"endColumn":20}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/scontrol/update_job.c","uriBaseId":"%SRCROOT%","index":68},"region":{"startLine":1287,"startColumn":21,"endColumn":26}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":730,"startColumn":9,"endColumn":14}}}],"partialFingerprints":{"primaryLocationLineHash":"a1d31ac18805c868:1","primaryLocationStartColumnFingerprint":"7"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":730,"startColumn":15,"endColumn":23}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmctld/job_mgr.c","uriBaseId":"%SRCROOT%","index":53},"region":{"startLine":709,"startColumn":6,"endColumn":10}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":175,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"1f5d8643fce55455:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":175,"startColumn":12,"endColumn":16}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":170,"startColumn":6,"endColumn":11}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":231,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"cc960b49391977c3:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":231,"startColumn":12,"endColumn":19}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":213,"startColumn":10,"endColumn":14}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](3), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":236,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"1cee05a33105df43:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":236,"startColumn":12,"endColumn":19}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":213,"startColumn":10,"endColumn":14}},"message":{"text":"checked"}},{"id":3,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/container.c","uriBaseId":"%SRCROOT%","index":69},"region":{"startLine":231,"startColumn":6,"endColumn":11}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2312,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"e1e7e1b97f331da3:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2312,"startColumn":12,"endColumn":16}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2307,"startColumn":6,"endColumn":11}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2369,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"125ef94b526571d6:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2369,"startColumn":12,"endColumn":18}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/mgr.c","uriBaseId":"%SRCROOT%","index":70},"region":{"startLine":2344,"startColumn":12,"endColumn":16}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](3), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](4), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":228,"startColumn":7,"endColumn":13}}}],"partialFingerprints":{"primaryLocationLineHash":"58ab2e9711e94c1d:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":228,"startColumn":14,"endColumn":18}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":203,"startColumn":17,"endColumn":25}},"message":{"text":"checked"}},{"id":3,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":206,"startColumn":22,"endColumn":30}},"message":{"text":"checked"}},{"id":4,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":223,"startColumn":6,"endColumn":10}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/toctou-race-condition","ruleIndex":3,"rule":{"id":"com.lgtm/cpp-queries:cpp/toctou-race-condition","index":3},"message":{"text":"The [filename](1) being operated upon was previously [checked](2), but the underlying file may have been changed since then.\nThe [filename](1) being operated upon was previously [checked](3), but the underlying file may have been changed since then."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":241,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"4dfc908224e70d4b:1","primaryLocationStartColumnFingerprint":"4"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":241,"startColumn":12,"endColumn":16}},"message":{"text":"filename"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":203,"startColumn":17,"endColumn":25}},"message":{"text":"checked"}},{"id":3,"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmstepd/req.c","uriBaseId":"%SRCROOT%","index":71},"region":{"startLine":206,"startColumn":22,"endColumn":30}},"message":{"text":"checked"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","ruleIndex":4,"rule":{"id":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","index":4},"message":{"text":"Comparison between [p](1) of type uint16_t and [... * ...](2) of wider type int."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":778,"startColumn":14,"endColumn":35}}}],"partialFingerprints":{"primaryLocationLineHash":"d1a2fd0dad29fd79:1","primaryLocationStartColumnFingerprint":"12"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":742,"startColumn":11,"endColumn":12}},"message":{"text":"p"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":778,"startColumn":19,"endColumn":34}},"message":{"text":"... * ..."}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","ruleIndex":4,"rule":{"id":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","index":4},"message":{"text":"Comparison between [j](1) of type uint16_t and [... + ...](2) of wider type int."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":853,"startColumn":21,"endColumn":37}}}],"partialFingerprints":{"primaryLocationLineHash":"2da74ca271314f52:1","primaryLocationStartColumnFingerprint":"16"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":842,"startColumn":14,"endColumn":15}},"message":{"text":"j"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":853,"startColumn":25,"endColumn":37}},"message":{"text":"... + ..."}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","ruleIndex":4,"rule":{"id":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","index":4},"message":{"text":"Comparison between [j](1) of type uint16_t and [... + ...](2) of wider type int."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":886,"startColumn":20,"endColumn":34}}}],"partialFingerprints":{"primaryLocationLineHash":"d98494c4d4600a8d:1","primaryLocationStartColumnFingerprint":"16"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":871,"startColumn":16,"endColumn":17}},"message":{"text":"j"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":886,"startColumn":24,"endColumn":34}},"message":{"text":"... + ..."}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","ruleIndex":4,"rule":{"id":"com.lgtm/cpp-queries:cpp/comparison-with-wider-type","index":4},"message":{"text":"Comparison between [i](1) of type uint16_t and [size](2) of wider type int."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":1023,"startColumn":15,"endColumn":23}}}],"partialFingerprints":{"primaryLocationLineHash":"a2b9cf9bf7c91ac3:1","primaryLocationStartColumnFingerprint":"12"},"relatedLocations":[{"id":1,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":954,"startColumn":11,"endColumn":12}},"message":{"text":"i"}},{"id":2,"physicalLocation":{"artifactLocation":{"uri":"src/plugins/task/affinity/dist_tasks.c","uriBaseId":"%SRCROOT%","index":45},"region":{"startLine":956,"startColumn":6,"endColumn":10}},"message":{"text":"size"}}]},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field found of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/plugstack.c","uriBaseId":"%SRCROOT%","index":72},"region":{"startLine":123,"startColumn":6,"endColumn":11}}}],"partialFingerprints":{"primaryLocationLineHash":"52c7768e75352508:1","primaryLocationStartColumnFingerprint":"4"}},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field disabled of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/common/plugstack.c","uriBaseId":"%SRCROOT%","index":72},"region":{"startLine":124,"startColumn":6,"endColumn":14}}}],"partialFingerprints":{"primaryLocationLineHash":"b3bf910a6b535e72:1","primaryLocationStartColumnFingerprint":"4"}},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field boot_time of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmd/slurmd.h","uriBaseId":"%SRCROOT%","index":73},"region":{"startLine":129,"startColumn":12,"endColumn":21}}}],"partialFingerprints":{"primaryLocationLineHash":"59b53076eeec266d:1","primaryLocationStartColumnFingerprint":"10"}},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field daemonize of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmd/slurmd.h","uriBaseId":"%SRCROOT%","index":73},"region":{"startLine":130,"startColumn":16,"endColumn":25}}}],"partialFingerprints":{"primaryLocationLineHash":"893b5515677c1d8a:1","primaryLocationStartColumnFingerprint":"14"}},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field cleanstart of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmd/slurmd.h","uriBaseId":"%SRCROOT%","index":73},"region":{"startLine":133,"startColumn":12,"endColumn":22}}}],"partialFingerprints":{"primaryLocationLineHash":"a25cf0f3007b3f9a:1","primaryLocationStartColumnFingerprint":"10"}},{"ruleId":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","ruleIndex":5,"rule":{"id":"com.lgtm/cpp-queries:cpp/ambiguously-signed-bit-field","index":5},"message":{"text":"Bit field mlock_pages of type int should have explicitly unsigned integral, explicitly signed integral, or enumeration type."},"locations":[{"physicalLocation":{"artifactLocation":{"uri":"src/slurmd/slurmd/slurmd.h","uriBaseId":"%SRCROOT%","index":73},"region":{"startLine":134,"startColumn":16,"endColumn":27}}}],"partialFingerprints":{"primaryLocationLineHash":"f4b1e09a5df95f92:1","primaryLocationStartColumnFingerprint":"14"}}],"columnKind":"utf16CodeUnits","properties":{"semmle.formatSpecifier":"2.1.0","semmle.sourceLanguage":"cpp"}}]}